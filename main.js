const getStudents = document.querySelector("[getStudents]");
const studentsField = document.querySelector("[studentsField]");

let studentsData = [];

const inputName = document.querySelector("[surname]");
const inputAge = document.querySelector("[age]");
const inputCourse = document.querySelector("[course]");
const inputSkills = document.querySelector("[skills]");
const inputEmail = document.querySelector("[email]");
const inputRecord = document.querySelector("[record]");

const addStudentBtn = document.querySelector("[addStudent]");

function showStudents() {
  studentsField.innerHTML = "";
  studentsData.forEach((element) => {
    studentsField.innerHTML += `<tr>
          <td>${element.id}</td>
          <td>${element.name}</td>
          <td>${element.age}</td>
          <td>${element.course}</td>
          <td>${element.skills}</td>
          <td>${element.email}</td>
          <td>${element.isEnrolled ? "–¢–∞–∫" : "–ù—ñ"}</td>
          <td>
            <button edit data-student-id="${element.id}">üíö</button>
            <button delete data-student-id="${element.id}">üíî</button>
          </td>
        </tr>`;
  });
}

function clearInputFields() {
  inputName.value = "";
  inputAge.value = "";
  inputCourse.value = "";
  inputSkills.value = "";
  inputEmail.value = "";
  inputRecord.checked = false;
}

getStudents.addEventListener("click", () => {
  fetch("./students.json")
    .then((response) => {
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      return response.json();
    })
    .then((data) => {
      console.log("–û—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ:", data);
      if (data && Array.isArray(data.students)) {
        studentsData = data.students;
        showStudents();
      } else {
        console.error(
          "–û—á—ñ–∫—É–≤–∞–≤—Å—è –æ–±'—î–∫—Ç –∑ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—é 'students', —â–æ —î –º–∞—Å–∏–≤–æ–º."
        );
      }
    })
    .catch((error) => console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤:", error));
});

addStudentBtn.addEventListener("click", () => {
  if (
    !inputName.value ||
    !inputAge.value ||
    !inputCourse.value ||
    !inputSkills.value ||
    !inputEmail.value
  ) {
    alert("–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –ø–æ–ª—è!");
    return;
  }
  const editingId = addStudentBtn.dataset.editingId;
  if (editingId) {
    const studentIndex = studentsData.findIndex(
      (student) => student.id === parseInt(editingId)
    );
    if (studentIndex !== -1) {
      studentsData[studentIndex] = {
        ...studentsData[studentIndex],
        name: inputName.value,
        age: parseInt(inputAge.value),
        course: inputCourse.value,
        skills: inputSkills.value,
        email: inputEmail.value,
        isEnrolled: inputRecord.checked,
      };
      showStudents();
      addStudentBtn.textContent = "–î–æ–¥–∞—Ç–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞";
      delete addStudentBtn.dataset.editingId;
      clearInputFields();
    }
  } else {
    const newStudentId = studentsData.length + 1;

    const newStudent = {
      id: newStudentId,
      name: inputName.value,
      age: parseInt(inputAge.value),
      course: inputCourse.value,
      skills: inputSkills.value,
      email: inputEmail.value,
      isEnrolled: inputRecord.checked,
    };

    studentsData.push(newStudent);
    showStudents();
    clearInputFields();
    console.log("–î–æ–¥–∞–Ω–æ –Ω–æ–≤–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞:", newStudent);
  }
});

studentsField.addEventListener("click", (event) => {
  const target = event.target;

  if (target.hasAttribute("delete")) {
    const studentIdToDelete = parseInt(target.dataset.studentId);
    console.log("–í–∏–¥–∞–ª—è—î–º–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –∑ ID:", studentIdToDelete);

    studentsData = studentsData.filter(
      (student) => student.id !== studentIdToDelete
    );
    showStudents();
    console.log("–°—Ç—É–¥–µ–Ω—Ç –≤–∏–¥–∞–ª–µ–Ω–∏–π (–ª–æ–∫–∞–ª—å–Ω–æ). –ü–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ:", studentsData);
  }

  if (target.hasAttribute("edit")) {
    const studentIdToEdit = parseInt(target.dataset.studentId);
    console.log("–†–µ–¥–∞–≥—É—î–º–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –∑ ID:", studentIdToEdit);

    const studentToEdit = studentsData.find(
      (student) => student.id === studentIdToEdit
    );

    if (studentToEdit) {
      inputName.value = studentToEdit.name;
      inputAge.value = studentToEdit.age;
      inputCourse.value = studentToEdit.course;
      inputSkills.value = studentToEdit.skills;
      inputEmail.value = studentToEdit.email;
      inputRecord.checked = studentToEdit.isEnrolled;

      addStudentBtn.dataset.editingId = studentIdToEdit;
      addStudentBtn.textContent = "–ó–±–µ—Ä–µ–≥—Ç–∏ –∑–º—ñ–Ω–∏";
      console.log(
        "–ü–æ–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω–æ –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —Å—Ç—É–¥–µ–Ω—Ç–∞ ID:",
        studentIdToEdit
      );
    } else {
      console.warn(
        "–°—Ç—É–¥–µ–Ω—Ç–∞ –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∑ ID " + studentIdToEdit + " –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ."
      );
    }
  }
});
